
package ru.naztrans.elcom.webclientclasses;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.10
 * Generated source version: 2.2
 * 
 */
@WebService(name = "CategoryService", targetNamespace = "http://webserviceclasses.elcom.naztrans.ru/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface CategoryService {


    /**
     * 
     * @param name
     * @param desc
     * @return
     *     returns ru.naztrans.elcom.service.ResultDTO
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "createCategory", targetNamespace = "http://service.elcom.naztrans.ru/", className = "ru.naztrans.elcom.service.CreateCategory")
    @ResponseWrapper(localName = "createCategoryResponse", targetNamespace = "http://service.elcom.naztrans.ru/", className = "ru.naztrans.elcom.service.CreateCategoryResponse")
    public ResultDTO createCategory(
            @WebParam(name = "name", targetNamespace = "")
                    String name,
            @WebParam(name = "desc", targetNamespace = "")
                    String desc);

    /**
     * 
     * @return
     *     returns ru.naztrans.elcom.service.ResultDTO
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "ping", targetNamespace = "http://service.elcom.naztrans.ru/", className = "ru.naztrans.elcom.service.Ping")
    @ResponseWrapper(localName = "pingResponse", targetNamespace = "http://service.elcom.naztrans.ru/", className = "ru.naztrans.elcom.service.PingResponse")
    public ResultDTO ping();

}
